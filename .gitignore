backend/__pycache__
ui/node_modules
ui/build
ui/.vscode
ui/.eslintcache
ui/.yarn/*
ui/.pnp.*
.vscode
**/config.json
**/key-*.xml

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates
backend/.idea

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
backend/[Dd]ebug/
backend/[Dd]ebugPublic/
backend/[Rr]elease/
backend/[Rr]eleases/
backend/x64/
backend/x86/
backend/build/
backend/bld/
backend/bin/
backend/Bin/
backend/obj/
backend/Obj/
backend/**/obj
backend/**/bin

# Visual Studio 2015 cache/options directory
backend/.vs/
backend/wwwroot/dist/

# MSTest test Results
backend/[Tt]est[Rr]esult*/
backend/[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
backend/TestResult.xml

# Build Results of an ATL Project
backend/[Dd]ebugPS/
backend/[Rr]eleasePS/
backend/dlldata.c

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
backend/_Chutzpah*

# Visual C++ cache files
backend/ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace
backend/$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
backend/_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
backend/.JustCode

# TeamCity is a build add-in
backend/_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
backend/_NCrunch_*
.*crunch*.local.xml
backend/nCrunchTemp_*

# MightyMoose
*.mm.*
backend/AutoTest.Net/

# Web workbench (sass)
backend/.sass-cache/

# Installshield output folder
backend/[Ee]xpress/

# DocProject is a documentation generator add-in
backend/DocProject/buildhelp/
backend/DocProject/Help/*.HxT
backend/DocProject/Help/*.HxC
backend/DocProject/Help/*.hhc
backend/DocProject/Help/*.hhk
backend/DocProject/Help/*.hhp
backend/DocProject/Help/Html2
backend/DocProject/Help/html

# Click-Once directory
backend/publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Microsoft Azure Build Output
backend/csx/
*.build.csdef

# Microsoft Azure Emulator
backend/ecf/
backend/rcf/

# Microsoft Azure ApplicationInsights config file
backend/ApplicationInsights.config

# Windows Store app package directory
backend/AppPackages/
backend/BundleArtifacts/

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
backend/ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
orleans.codegen.cs

**/node_modules

# RIA/Silverlight projects
backend/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
backend/_UpgradeReport_Files/
backend/Backup*/
backend/UpgradeLog*.XML
backend/UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
backend/FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
backend/.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
backend/_Pvt_Extensions

# Paket dependency manager
backend/.paket/paket.exe

# FAKE - F# Make
backend/.fake/

# CLI Test runs
**/TestResults/*
